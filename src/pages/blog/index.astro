---
import { getCollection, render } from 'astro:content';
import Layout from '../../layout/Layout.astro';
import { Image } from 'astro:assets';
import { formattedPublishDate } from '~/utils/date';
import { getBlogPosts } from '~/utils/getBlog';
import { cloudinaryImageResize } from '~/utils/cloudinaryImageResize';
import Chip from '~/components/chip.astro';

interface Props {
  tagFilter?: string[];
}

const { tagFilter } = Astro.props;
const { posts, tags } = getBlogPosts(await getCollection('blog'), {
  tagFilter: tagFilter,
});
---

<Layout title="Blog">
  <div class="layout-container">
    <div class="py-[80px]">
      <div class="text-center">
        <h1 class="title-color text-2xl font-semibold md:text-4xl">
          Blog Posts
        </h1>
        <p class="p-color mt-2">
          Insights from My Software Engineering Journey
        </p>
      </div>
      <div class="mt-3 flex flex-wrap items-center justify-center gap-2">
        {
          tags.map((tag) => {
            const selected =
              tagFilter && tagFilter.includes(tag.toLocaleLowerCase());
            return (
              <a
                href={selected ? '/blog' : '/blog/' + tag.toLocaleLowerCase()}
                class="flex"
              >
                <Chip
                  class={`border-2 ${selected ? 'border-brand-300' : 'hover:border-brand-300'}`}
                >
                  {tag}
                </Chip>
              </a>
            );
          })
        }
      </div>
      <div
        class="mt-10 grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-5 lg:grid-cols-3"
      >
        {
          posts.map((post, index) => (
            <a href={'/blog/' + post.id.split('/')[0]} class="">
              <div class="h-full rounded-3xl border-2 border-slate-200 bg-transparent p-3 hover:bg-slate-300 dark:border-slate-800 dark:hover:bg-slate-900 sm:p-3">
                {post.data.cover && (
                  <div
                    class="mb-4"
                    data-anotherTest="hi"
                    data-sdfasdf="sdfasdf"
                  >
                    <Image
                      src={cloudinaryImageResize({
                        imageUrl: post.data.cover,
                        width: 450,
                        height: 300,
                      })}
                      alt={post.data.coverAlt || post.data.title}
                      width={450}
                      height={300}
                      loading={'eager'}
                      class={
                        'aspect-[3/2] min-h-[150px] w-full rounded-2xl object-cover object-center'
                      }
                    />
                  </div>
                )}
                <div>
                  <h2 class="mb-2 text-lg font-semibold text-slate-800 dark:text-slate-300">
                    {post.data.title}
                  </h2>
                  <div class="flex items-center justify-start">
                    <p class="text-sm text-slate-500">
                      {formattedPublishDate(post.data.pubDate)}
                    </p>
                    <p class="mx-2 text-slate-500">â€¢</p>
                    <p class="text-sm text-slate-500">
                      (
                      {render(post).then(
                        (item) => item.remarkPluginFrontmatter.minutesRead
                      )}
                      )
                    </p>
                  </div>
                  <p class="p-color mt-3">{post.data.description}</p>
                </div>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</Layout>

<script>
  const blogTagsEl = document.querySelectorAll('.blog-tag');
  blogTagsEl.forEach((tag) => {
    tag.addEventListener('click', () => {
      // window.location.href = `/blog?tag=${tag.textContent}`;
      // alert(tag.textContent);
    });
  });
</script>
