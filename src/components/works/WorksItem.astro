---
interface Props {
  title: string;
  description?: string;
  tags?: string[];
  projectType: string;
  link?: string;
  linkText?: string;
  year: string;
  points?: string[];
}
const { title, tags, description, year, link, linkText, projectType, points } =
  Astro.props;
---

<div
  class="space-y-3 px-3 py-6 hover:bg-[#e6e8ec] dark:hover:bg-[#070c13] md:px-5"
>
  <div class="flex flex-wrap items-center gap-2">
    <h1 class="title-color text-xl font-semibold">{title}</h1>
    <p class="text-md text-slate-400">
      (<a class="link" href={link} target="_blank" rel="noopener noreferrer"
        >{linkText} ðŸ”—</a
      >)
    </p>
  </div>
  <div class="flex flex-row flex-wrap items-center justify-start gap-2">
    <p>{projectType}</p>
    <p class="text-sm text-slate-400">|</p>
    <p>{year}</p>
    {
      points &&
        points.map((item) => (
          <>
            <p class="text-sm text-slate-400">|</p>
            <p>{item}</p>
          </>
        ))
    }
  </div>
  {description && <p class="p-color text-base">{description}</p>}

  {
    tags && (
      <div class="flex flex-wrap gap-2">
        {tags.map((item) => (
          <span class="rounded-md bg-slate-100 px-2 py-1 text-base text-slate-600 dark:bg-slate-800 dark:text-slate-400">
            {item}
          </span>
        ))}
      </div>
    )
  }
</div>
